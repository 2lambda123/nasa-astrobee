-- Copyright (c) 2017, United States Government, as represented by the
-- Administrator of the National Aeronautics and Space Administration.
--
-- All rights reserved.
--
-- The Astrobee platform is licensed under the Apache License, Version 2.0
-- (the "License"); you may not use this file except in compliance with the
-- License. You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
-- WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
-- License for the specific language governing permissions and limitations
-- under the License.

-- honeybee config

robot_llp_address = "10.42.0.4"
robot_mlp_address = "10.42.0.5"

robot_i2c_bus = "/dev/i2c-1"

robot_imu_drdy_pin = 4

robot_geometry = {
-- Calibrated on 2024/07/02
  nav_cam_to_haz_cam_transform = transform(vec3(0.064408842, -0.0018474084, -0.034520172), quat4(-0.0033437127, 0.0094915996, 0.99994679, 0.0022666378)),
  nav_cam_to_sci_cam_transform = transform(vec3(-0.049417882, 0.018566808, 0.013784694), quat4(0.0014602934, 0.0016304596, -0.0024437981, 0.99999462)),
  haz_cam_depth_to_image_transform = {
    0.98948285, 0.001415891, -0.021059668, -0.0070630633,
    -0.0002719089, 0.9875915, -0.0038065862, -0.00013643275,
    0.017329852, -0.002283376, 0.96965353, -0.021957843,
    0, 0, 0, 1},

-- Engineering positions with idealized orientations
  perch_cam_transform      = transform(vec3(-0.1331, 0.0509, -0.0166), quat4(0.000, -0.70710678118, 0.000, 0.70710678118)),-- placeholder, not valid!
  haz_cam_transform        = transform(vec3(0.1328, 0.0362, -0.0826), quat4(-0.500, 0.500, -0.500, 0.500)), -- placeholder, not valid!
  nav_cam_transform        = transform(vec3(0.1157+0.002, -0.0422, -0.0826), quat4(0.500, 0.500, 0.500, 0.500) ),
  dock_cam_transform       = transform(vec3(-0.1032-0.0029, -0.0540, -0.0064), quat4(0.500, -0.500, -0.500, 0.500) ),
  imu_transform            = transform(vec3(0.0247, 0.0183, 0.0094), quat4(0.000, 0.000, 0.70710678118, 0.70710678118) ),
  -- Not accurate only for sim purposes
  sci_cam_transform        = transform(vec3(0.118, 0.0, -0.096), quat4(0.500, 0.500, 0.500, 0.500) )
};

robot_camera_calibrations = {
  nav_cam = {
    distortion_coeff = 0.998757,
    intrinsic_matrix = {
      610.12594, 0.0, 628.35064,
      0.0, 610.12594, 514.89592,
      0.0, 0.0, 1.0
    },
    gain=50,
    exposure=175
  },
  dock_cam = {
    distortion_coeff = 1.00882,
    intrinsic_matrix = {
      753.20881, 0.0, 583.45622,
      0.0, 751.73929, 462.46398,
      0.0, 0.0, 1.0
    },
    gain=50,
    exposure=150
  },

  perch_cam = {
    distortion_coeff = {-0.366735, 0.182027, 0.00218105, 0.0114682},
    intrinsic_matrix = {
      209.21199, 0.0, 94.688486,
      0.0, 207.62067, 84.04047,
      0.0, 0.0, 1.0
    },
    gain=100,
    exposure=150
  },
-- Calibrated on 2024/07/02
  haz_cam = {
    distortion_coeff = {-0.3068457, 6.8824101e-07, -0.0027885204, -0.0061697912},
    intrinsic_matrix = {
      208.33421, 0.0, 112.77101,
      0.0, 208.33421, 87.265089,
      0.0, 0.0, 1.0
    },
    gain=50,
    exposure=150
  },
-- Calibrated on 2024/07/02
  sci_cam = {
    distortion_coeff = {-0.030601401, 0.048784498, -0.0011287417, 0.00016061301},
    intrinsic_matrix = {
      1034.3785, 0.0, 684.85322,
      0.0, 1034.3785, 507.41357,
      0.0, 0.0, 1.0
    },
    gain=50,
    exposure=150
  },
  nav_cam_to_haz_cam_timestamp_offset = -0.02,
  nav_cam_to_sci_cam_timestamp_offset = 0.18
}

-- PMC bus ordering and i2c trims {stbd, port}
robot_pmc_i2c_addrs = {0x21, 0x20}
robot_port_nozzle_calibration = {
  {0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0}
}
robot_stbd_nozzle_calibration = {
  {0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0}
}

robot_haz_cam_device   = "0005-4804-0050-1913"
robot_perch_cam_device = "0005-1209-0034-0717"

-- Location of the trackers in the body frame
robot_vive_extrinsics = {
  {
    -- port
    serial = "LHR-08DE963B", pose = transform(
      vec3(0, -0.1397, -0.1397),
      quat4(1.0, 0.0, 0.0, 0.0))
  },{
    -- starboard
    serial = "LHR-1FC0DEF4", pose = transform(
      vec3(0,  0.1397, -0.1397),
      quat4(0.0, 1.0, 0.0, 0.0))
  }
}

agent_name = "Honey"

heartbeat_queue_size = 20

nodes_not_running = {}
