-- Copyright (c) 2017, United States Government, as represented by the
-- Administrator of the National Aeronautics and Space Administration.
--
-- All rights reserved.
--
-- The Astrobee platform is licensed under the Apache License, Version 2.0
-- (the "License"); you may not use this file except in compliance with the
-- License. You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
-- WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
-- License for the specific language governing permissions and limitations
-- under the License.

require "context"

-- Enable DDS communications on start --
-- If false, a trigger call will be needed to start communications --
initialize_dds_on_start = false

links = {
  -- Logically, there could be up to three two-way links between the three robots. In practice, we
  -- will probably only have one link.
  {
    -- A single link entry has required fields "from" and "to" that specify the robot roles involved
    -- in the link.
    from = "Bumble",  -- manager
    to = "Honey",     -- actor

    -- The link entry has three optional fields: relay_forward (messages to be relayed only in the
    -- `from` to `to` direction), relay_backward (to be relayed only in the `to` to `from` direction),
    -- and relay_both (to be relayed in both directions). Providing all three fields gives the user
    -- full directional control while minimizing repetition and copy/paste errors.

    -- Each topic entry can contain an input topic and an output topic. The
    -- in topic is the topic being published on the robot sending the data and
    -- must be specified. The optional out topic is the name of the topic a
    -- user wants the data published on in the receiving robot. If the
    -- out topic is not specified, the comms bridge will set it to be the name
    -- of the robot sending the data combined with the in topic name. For
    -- instance, if the from robot was Bumble and the to robot was Honey and
    -- one of the in topics in the relay forward list was "mgt/ack", then it
    -- would be published on Honey on topic "bumble/mgt/ack".
    -- Please note that only one unique in topic can exist in the relay forward
    -- and relay both lists and the relay backward and relay both lists. It is
    -- fine to have the same in topic in the relay forward and relay backward
    -- lists.

    relay_forward = {
    },
    relay_backward = {
    },
    relay_both = {
      {in_topic = "gnc/ekf"},
      {in_topic = "gs/data"},
    },
  },
  {
    from = "Bsharp",  -- manager
    to = "Wannabee",  -- actor

    relay_forward = {
    },
    relay_backward = {
    },
    relay_both = {
      {in_topic = "gnc/ekf"},
      {in_topic = "gs/data"},
    }
  }
}

verbose = 2
ad2pub_delay = 3.0
