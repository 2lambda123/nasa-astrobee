diff --git a/CMakeLists.txt b/ar_track_alvar/CMakeLists.txt
index 94e94f2..33b3fc7 100644
--- a/CMakeLists.txt
+++ b/ar_track_alvar/CMakeLists.txt
@@ -22,6 +22,7 @@ find_package(catkin REQUIRED COMPONENTS
 find_package(Eigen3 REQUIRED)
 find_package(OpenCV REQUIRED)
 find_package(TinyXML REQUIRED)
+find_package(PCL REQUIRED COMPONENTS common)
 
 # dynamic reconfigure support
 generate_dynamic_reconfigure_options(cfg/Params.cfg)
@@ -36,8 +37,6 @@ catkin_package(
         geometry_msgs
         image_transport
         message_runtime
-        pcl_conversions
-        pcl_ros
         resource_retriever
         roscpp
         sensor_msgs
@@ -51,6 +50,7 @@ include_directories(include
                     ${catkin_INCLUDE_DIRS}
                     ${OpenCV_INCLUDE_DIRS}
                     ${TinyXML_INCLUDE_DIRS}
+                    ${PCL_INCLUDE_DIRS}
 
 )
 
@@ -85,43 +85,10 @@ add_library(${PROJECT_NAME}
     src/Threads_unix.cpp
     src/Util.cpp
 )
-target_link_libraries(${PROJECT_NAME} ${OpenCV_LIBS} ${TinyXML_LIBRARIES} ${catkin_LIBRARIES})
+target_link_libraries(${PROJECT_NAME} ${OpenCV_LIBS} ${TinyXML_LIBRARIES} ${catkin_LIBRARIES} ${PCL_LIBRARIES})
 add_dependencies(${PROJECT_NAME} ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})
 
-# Kinect filtering code
-add_library(kinect_filtering src/kinect_filtering.cpp)
-target_link_libraries(kinect_filtering ${catkin_LIBRARIES})
-add_dependencies(kinect_filtering ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})
-
-add_library(medianFilter src/medianFilter.cpp)
-target_link_libraries(medianFilter ${PROJECT_NAME} ${catkin_LIBRARIES})
-add_dependencies(medianFilter ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})
-
-add_executable(individualMarkers nodes/IndividualMarkers.cpp)
-target_link_libraries(individualMarkers ${PROJECT_NAME} kinect_filtering ${catkin_LIBRARIES})
-add_dependencies(individualMarkers ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})
-
-add_executable(individualMarkersNoKinect nodes/IndividualMarkersNoKinect.cpp)
-target_link_libraries(individualMarkersNoKinect ${PROJECT_NAME} ${catkin_LIBRARIES})
-add_dependencies(individualMarkersNoKinect ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})
-
-add_executable(trainMarkerBundle nodes/TrainMarkerBundle.cpp)
-target_link_libraries(trainMarkerBundle ${PROJECT_NAME} ${catkin_LIBRARIES})
-add_dependencies(trainMarkerBundle ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})
-
-add_executable(findMarkerBundles nodes/FindMarkerBundles.cpp)
-target_link_libraries(findMarkerBundles ${PROJECT_NAME} kinect_filtering medianFilter ${catkin_LIBRARIES})
-add_dependencies(findMarkerBundles ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})
-
-add_executable(findMarkerBundlesNoKinect nodes/FindMarkerBundlesNoKinect.cpp)
-target_link_libraries(findMarkerBundlesNoKinect ${PROJECT_NAME} ${catkin_LIBRARIES})
-add_dependencies(findMarkerBundlesNoKinect ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})
-
-add_executable(createMarker src/SampleMarkerCreator.cpp)
-target_link_libraries(createMarker ${PROJECT_NAME} ${catkin_LIBRARIES})
-add_dependencies(createMarker ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})
-
-install(TARGETS ${PROJECT_NAME} createMarker findMarkerBundles findMarkerBundlesNoKinect individualMarkers individualMarkersNoKinect kinect_filtering medianFilter trainMarkerBundle
+install(TARGETS ${PROJECT_NAME}
   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
diff --git a/include/ar_track_alvar/filter/kinect_filtering.h b/ar_track_alvar/include/ar_track_alvar/filter/kinect_filtering.h
index d0d8655..3f7f5c6 100644
--- a/include/ar_track_alvar/filter/kinect_filtering.h
+++ b/ar_track_alvar/include/ar_track_alvar/filter/kinect_filtering.h
@@ -39,7 +39,6 @@
 #ifndef AR_TRACK_ALVAR_KINECT_FILTERING_H
 #define AR_TRACK_ALVAR_KINECT_FILTERING_H
 
-#include <pcl_conversions/pcl_conversions.h>
 #include <pcl/point_types.h>
 #include <pcl/registration/icp.h>
 #include <pcl/registration/registration.h>
@@ -47,11 +46,10 @@
 #include <geometry_msgs/PoseStamped.h>
 #include <ros/ros.h>
 #include <pcl/ModelCoefficients.h>
-#include <pcl/point_types.h>
 #include <pcl/sample_consensus/method_types.h>
 #include <pcl/sample_consensus/model_types.h>
 #include <pcl/segmentation/sac_segmentation.h>
-#include <pcl_ros/point_cloud.h>
+// #include <pcl_ros/point_cloud.h>
 #include <pcl/filters/extract_indices.h>
 #include <boost/lexical_cast.hpp>
 #include <Eigen/StdVector>
diff --git a/package.xml b/ar_track_alvar/package.xml
index 727c817..80f317b 100644
--- a/package.xml
+++ b/ar_track_alvar/package.xml
@@ -22,8 +22,6 @@
  <depend>dynamic_reconfigure</depend>
  <depend>geometry_msgs</depend>
  <depend>image_transport</depend>
- <depend>pcl_ros</depend>
- <depend>pcl_conversions</depend>
  <depend>resource_retriever</depend>
  <depend>roscpp</depend>
  <depend>sensor_msgs</depend>
