#!/usr/bin/make -f
# See debhelper(7) (uncomment to enable)
# output every command that modifies files on the build system.
#export DH_VERBOSE = 1

ifeq ($(DEB_HOST_ARCH),armhf)
	export FSW_CONFIG_FLAGS = -a -w debian -n debian -p src/debian/tmp
else
	export FSW_CONFIG_FLAGS = -l -w debian_native -n debian_native -p src/debian/tmp/opt/astrobee
	# dpkg-buildpackage and catkin were both adding flags apparently, ignore dpkg's
	export DEB_CXXFLAGS_MAINT_SET
endif

%:
	# We are using catkin now, but debhelper does not exactly support it
	# Since debhelper xenial does not support 'none', set cmake instead
	dh $@ --buildsystem=cmake

# only configure for architecture dependent
override_dh_auto_configure-arch:
	# configure the build
	cd .. && src/scripts/configure.sh  $(FSW_CONFIG_FLAGS)
	# Make sure we install
	catkin config --install

# build and install for architecture dependent only
override_dh_auto_install-arch:
	cd .. && catkin build

# override only for arch dependent, for astrobee-config let it use default
override_dh_install-arch:
	# Clean pycache before copying directories
	pyclean debian || py3clean debian
	# Move DDS stuff out of debian/tmp (astrobee-comms.files)
	# so we don't intall it again to astrobee0
	dh_movefiles
	# Install the rest of the files as defined in <package>.install
	dh_install

# dpkg-shlibdebs and dpkq-query have issues finding dependencies in our chroot
# Skip this step since it was not populating {shlibs:Depends} anyway.
override_dh_shlibdeps:

override_dh_gencontrol:
	# Generate control file with the correct ros distribution and python for dependencies
	dh_gencontrol -- -Vros-distro=$(ROS_DISTRO) -Vros-python=python$(ROS_PYTHON_VERSION)

# skip for 'arch independent' (astrobee-config)
override_dh_auto_configure-indep override_dh_auto_install-indep:

# skip for all
override_dh_auto_build override_dh_auto_test:
