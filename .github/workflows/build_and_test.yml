name: Docker Image CI

on:
  push:
    branches: [ 'master', 'develop' ]
  pull_request:
    branches: [ 'master', 'develop' ]

jobs:

  build-kinetic:

    runs-on: ubuntu-16.04

    steps:
    - uses: actions/checkout@v2

    - name: Install rocker
      run: |
        sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
        sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
        sudo apt-get update
        sudo apt-get install -y libpython3-dev python3-venv
        sudo apt-get install python3-rocker

    - name: Checkout submodule
      run: git submodule update --init --depth 1 description/media

    - name: Build code for Ubuntu 16
      run: docker build . -f ./scripts/docker/astrobee_kinetic.Dockerfile -t astrobee/astrobee:latest-kinetic

    - name: Test code
      run: rocker --nvidia --x11 astrobee/astrobee:latest-kinetic /astrobee_init.sh rostest choreographer test_zones_nominal.test

  build-melodic:

    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2

    - name: Checkout submodule
      run: git submodule update --init --depth 1 description/media

    - name: Build code for Ubuntu 18
      run: docker build . -f ./scripts/docker/astrobee_melodic.Dockerfile -t astrobee/astrobee:latest-melodic

    - name: Test code
      run: docker build . -f ./scripts/docker/test_astrobee_melodic.Dockerfile -t test